/* soapMedia2BindingService.h
   Generated by gSOAP 2.8.138 for generated.h

gSOAP XML Web services tools
Copyright (C) 2000-2025, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapMedia2BindingService_H
#define soapMedia2BindingService_H
#include "soapH.h"

    class SOAP_CMAC Media2BindingService {
      public:
        /// Context to manage service IO and data
        struct soap *soap;
        /// flag indicating that this context is owned by this service and should be deleted by the destructor
        bool soap_own;
        /// Variables globally declared in generated.h, if any
        /// Construct a service with new managing context
        Media2BindingService();
        /// Copy constructor
        Media2BindingService(const Media2BindingService&);
        /// Construct service given a shared managing context
        Media2BindingService(struct soap*);
        /// Constructor taking input+output mode flags for the new managing context
        Media2BindingService(soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        Media2BindingService(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context, when the context was allocated by the constructor
        virtual ~Media2BindingService();
        /// Delete all deserialized data (with soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to defaults
        virtual void reset();
        /// Initializer used by constructors
        virtual void Media2BindingService_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual Media2BindingService *copy() SOAP_PURE_VIRTUAL_COPY;
        /// Copy assignment
        Media2BindingService& operator=(const Media2BindingService&);
        /// Close connection (normally automatic)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Return sender-related fault to sender
        virtual int soap_senderfault(const char *string, const char *detailXML);
        /// Return sender-related fault with SOAP 1.2 subcode to sender
        virtual int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
        /// Return receiver-related fault to sender
        virtual int soap_receiverfault(const char *string, const char *detailXML);
        /// Return receiver-related fault with SOAP 1.2 subcode to sender
        virtual int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Add SOAP Header to message
        virtual void soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance);
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
    #ifndef WITH_NOIO
        /// Run simple single-thread (iterative, non-SSL) service on port until a connection error occurs (returns SOAP_OK or error code), use this->bind_flag = SO_REUSEADDR to rebind for immediate rerun
        virtual int run(int port, int backlog = 1);
    #if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
        /// Run simple single-thread SSL service on port until a connection error occurs (returns SOAP_OK or error code), use this->bind_flag = SO_REUSEADDR to rebind for immediate rerun
        virtual int ssl_run(int port, int backlog = 1);
    #endif
        /// Bind service to port (returns master socket or SOAP_INVALID_SOCKET upon error)
        virtual SOAP_SOCKET bind(const char *host, int port, int backlog);
        /// Accept next request (returns socket or SOAP_INVALID_SOCKET upon error)
        virtual SOAP_SOCKET accept();
    #if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
        /// When SSL is used, after accept() should perform and accept SSL handshake
        virtual int ssl_accept();
    #endif
    #endif
        /// After accept() serve the pending request (returns SOAP_OK or error code)
        virtual int serve();
        /// Used by serve() to dispatch a pending request (returns SOAP_OK or error code)
        virtual int dispatch();
        virtual int dispatch(struct soap *soap);
        //
        // Service operations are listed below: you should define these
        // Note: compile with -DWITH_PURE_VIRTUAL to declare pure virtual methods
        //
        /// Web service operation 'GetServiceCapabilities' implementation, should return SOAP_OK or error code
        virtual int GetServiceCapabilities(_ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'CreateProfile' implementation, should return SOAP_OK or error code
        virtual int CreateProfile(_ns1__CreateProfile *ns1__CreateProfile, _ns1__CreateProfileResponse &ns1__CreateProfileResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetProfiles' implementation, should return SOAP_OK or error code
        virtual int GetProfiles(_ns1__GetProfiles *ns1__GetProfiles, _ns1__GetProfilesResponse &ns1__GetProfilesResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'AddConfiguration' implementation, should return SOAP_OK or error code
        virtual int AddConfiguration(_ns1__AddConfiguration *ns1__AddConfiguration, _ns1__AddConfigurationResponse &ns1__AddConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'RemoveConfiguration' implementation, should return SOAP_OK or error code
        virtual int RemoveConfiguration(_ns1__RemoveConfiguration *ns1__RemoveConfiguration, _ns1__RemoveConfigurationResponse &ns1__RemoveConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'DeleteProfile' implementation, should return SOAP_OK or error code
        virtual int DeleteProfile(_ns1__DeleteProfile *ns1__DeleteProfile, _ns1__DeleteProfileResponse &ns1__DeleteProfileResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetVideoSourceConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetVideoSourceConfigurations(ns1__GetConfiguration *ns1__GetVideoSourceConfigurations, _ns1__GetVideoSourceConfigurationsResponse &ns1__GetVideoSourceConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetVideoEncoderConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetVideoEncoderConfigurations(ns1__GetConfiguration *ns1__GetVideoEncoderConfigurations, _ns1__GetVideoEncoderConfigurationsResponse &ns1__GetVideoEncoderConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAudioSourceConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetAudioSourceConfigurations(ns1__GetConfiguration *ns1__GetAudioSourceConfigurations, _ns1__GetAudioSourceConfigurationsResponse &ns1__GetAudioSourceConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAudioEncoderConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetAudioEncoderConfigurations(ns1__GetConfiguration *ns1__GetAudioEncoderConfigurations, _ns1__GetAudioEncoderConfigurationsResponse &ns1__GetAudioEncoderConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAnalyticsConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetAnalyticsConfigurations(ns1__GetConfiguration *ns1__GetAnalyticsConfigurations, _ns1__GetAnalyticsConfigurationsResponse &ns1__GetAnalyticsConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetMetadataConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetMetadataConfigurations(ns1__GetConfiguration *ns1__GetMetadataConfigurations, _ns1__GetMetadataConfigurationsResponse &ns1__GetMetadataConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAudioOutputConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetAudioOutputConfigurations(ns1__GetConfiguration *ns1__GetAudioOutputConfigurations, _ns1__GetAudioOutputConfigurationsResponse &ns1__GetAudioOutputConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAudioDecoderConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetAudioDecoderConfigurations(ns1__GetConfiguration *ns1__GetAudioDecoderConfigurations, _ns1__GetAudioDecoderConfigurationsResponse &ns1__GetAudioDecoderConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetVideoSourceConfiguration' implementation, should return SOAP_OK or error code
        virtual int SetVideoSourceConfiguration(_ns1__SetVideoSourceConfiguration *ns1__SetVideoSourceConfiguration, ns1__SetConfigurationResponse &ns1__SetVideoSourceConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetVideoEncoderConfiguration' implementation, should return SOAP_OK or error code
        virtual int SetVideoEncoderConfiguration(_ns1__SetVideoEncoderConfiguration *ns1__SetVideoEncoderConfiguration, ns1__SetConfigurationResponse &ns1__SetVideoEncoderConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetAudioSourceConfiguration' implementation, should return SOAP_OK or error code
        virtual int SetAudioSourceConfiguration(_ns1__SetAudioSourceConfiguration *ns1__SetAudioSourceConfiguration, ns1__SetConfigurationResponse &ns1__SetAudioSourceConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetAudioEncoderConfiguration' implementation, should return SOAP_OK or error code
        virtual int SetAudioEncoderConfiguration(_ns1__SetAudioEncoderConfiguration *ns1__SetAudioEncoderConfiguration, ns1__SetConfigurationResponse &ns1__SetAudioEncoderConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetMetadataConfiguration' implementation, should return SOAP_OK or error code
        virtual int SetMetadataConfiguration(_ns1__SetMetadataConfiguration *ns1__SetMetadataConfiguration, ns1__SetConfigurationResponse &ns1__SetMetadataConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetAudioOutputConfiguration' implementation, should return SOAP_OK or error code
        virtual int SetAudioOutputConfiguration(_ns1__SetAudioOutputConfiguration *ns1__SetAudioOutputConfiguration, ns1__SetConfigurationResponse &ns1__SetAudioOutputConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetAudioDecoderConfiguration' implementation, should return SOAP_OK or error code
        virtual int SetAudioDecoderConfiguration(_ns1__SetAudioDecoderConfiguration *ns1__SetAudioDecoderConfiguration, ns1__SetConfigurationResponse &ns1__SetAudioDecoderConfigurationResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetVideoSourceConfigurationOptions' implementation, should return SOAP_OK or error code
        virtual int GetVideoSourceConfigurationOptions(ns1__GetConfiguration *ns1__GetVideoSourceConfigurationOptions, _ns1__GetVideoSourceConfigurationOptionsResponse &ns1__GetVideoSourceConfigurationOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetVideoEncoderConfigurationOptions' implementation, should return SOAP_OK or error code
        virtual int GetVideoEncoderConfigurationOptions(ns1__GetConfiguration *ns1__GetVideoEncoderConfigurationOptions, _ns1__GetVideoEncoderConfigurationOptionsResponse &ns1__GetVideoEncoderConfigurationOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAudioSourceConfigurationOptions' implementation, should return SOAP_OK or error code
        virtual int GetAudioSourceConfigurationOptions(ns1__GetConfiguration *ns1__GetAudioSourceConfigurationOptions, _ns1__GetAudioSourceConfigurationOptionsResponse &ns1__GetAudioSourceConfigurationOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAudioEncoderConfigurationOptions' implementation, should return SOAP_OK or error code
        virtual int GetAudioEncoderConfigurationOptions(ns1__GetConfiguration *ns1__GetAudioEncoderConfigurationOptions, _ns1__GetAudioEncoderConfigurationOptionsResponse &ns1__GetAudioEncoderConfigurationOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetMetadataConfigurationOptions' implementation, should return SOAP_OK or error code
        virtual int GetMetadataConfigurationOptions(ns1__GetConfiguration *ns1__GetMetadataConfigurationOptions, _ns1__GetMetadataConfigurationOptionsResponse &ns1__GetMetadataConfigurationOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAudioOutputConfigurationOptions' implementation, should return SOAP_OK or error code
        virtual int GetAudioOutputConfigurationOptions(ns1__GetConfiguration *ns1__GetAudioOutputConfigurationOptions, _ns1__GetAudioOutputConfigurationOptionsResponse &ns1__GetAudioOutputConfigurationOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetAudioDecoderConfigurationOptions' implementation, should return SOAP_OK or error code
        virtual int GetAudioDecoderConfigurationOptions(ns1__GetConfiguration *ns1__GetAudioDecoderConfigurationOptions, _ns1__GetAudioDecoderConfigurationOptionsResponse &ns1__GetAudioDecoderConfigurationOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetVideoEncoderInstances' implementation, should return SOAP_OK or error code
        virtual int GetVideoEncoderInstances(_ns1__GetVideoEncoderInstances *ns1__GetVideoEncoderInstances, _ns1__GetVideoEncoderInstancesResponse &ns1__GetVideoEncoderInstancesResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetStreamUri' implementation, should return SOAP_OK or error code
        virtual int GetStreamUri(_ns1__GetStreamUri *ns1__GetStreamUri, _ns1__GetStreamUriResponse &ns1__GetStreamUriResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'StartMulticastStreaming' implementation, should return SOAP_OK or error code
        virtual int StartMulticastStreaming(ns1__StartStopMulticastStreaming *ns1__StartMulticastStreaming, ns1__SetConfigurationResponse &ns1__StartMulticastStreamingResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'StopMulticastStreaming' implementation, should return SOAP_OK or error code
        virtual int StopMulticastStreaming(ns1__StartStopMulticastStreaming *ns1__StopMulticastStreaming, ns1__SetConfigurationResponse &ns1__StopMulticastStreamingResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetSynchronizationPoint' implementation, should return SOAP_OK or error code
        virtual int SetSynchronizationPoint(_ns1__SetSynchronizationPoint *ns1__SetSynchronizationPoint, _ns1__SetSynchronizationPointResponse &ns1__SetSynchronizationPointResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetSnapshotUri' implementation, should return SOAP_OK or error code
        virtual int GetSnapshotUri(_ns1__GetSnapshotUri *ns1__GetSnapshotUri, _ns1__GetSnapshotUriResponse &ns1__GetSnapshotUriResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetVideoSourceModes' implementation, should return SOAP_OK or error code
        virtual int GetVideoSourceModes(_ns1__GetVideoSourceModes *ns1__GetVideoSourceModes, _ns1__GetVideoSourceModesResponse &ns1__GetVideoSourceModesResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetVideoSourceMode' implementation, should return SOAP_OK or error code
        virtual int SetVideoSourceMode(_ns1__SetVideoSourceMode *ns1__SetVideoSourceMode, _ns1__SetVideoSourceModeResponse &ns1__SetVideoSourceModeResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetOSDs' implementation, should return SOAP_OK or error code
        virtual int GetOSDs(_ns1__GetOSDs *ns1__GetOSDs, _ns1__GetOSDsResponse &ns1__GetOSDsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetOSDOptions' implementation, should return SOAP_OK or error code
        virtual int GetOSDOptions(_ns1__GetOSDOptions *ns1__GetOSDOptions, _ns1__GetOSDOptionsResponse &ns1__GetOSDOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetOSD' implementation, should return SOAP_OK or error code
        virtual int SetOSD(_ns1__SetOSD *ns1__SetOSD, ns1__SetConfigurationResponse &ns1__SetOSDResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'CreateOSD' implementation, should return SOAP_OK or error code
        virtual int CreateOSD(_ns1__CreateOSD *ns1__CreateOSD, _ns1__CreateOSDResponse &ns1__CreateOSDResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'DeleteOSD' implementation, should return SOAP_OK or error code
        virtual int DeleteOSD(_ns1__DeleteOSD *ns1__DeleteOSD, ns1__SetConfigurationResponse &ns1__DeleteOSDResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetMasks' implementation, should return SOAP_OK or error code
        virtual int GetMasks(_ns1__GetMasks *ns1__GetMasks, _ns1__GetMasksResponse &ns1__GetMasksResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetMaskOptions' implementation, should return SOAP_OK or error code
        virtual int GetMaskOptions(_ns1__GetMaskOptions *ns1__GetMaskOptions, _ns1__GetMaskOptionsResponse &ns1__GetMaskOptionsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetMask' implementation, should return SOAP_OK or error code
        virtual int SetMask(_ns1__SetMask *ns1__SetMask, ns1__SetConfigurationResponse &ns1__SetMaskResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'CreateMask' implementation, should return SOAP_OK or error code
        virtual int CreateMask(_ns1__CreateMask *ns1__CreateMask, _ns1__CreateMaskResponse &ns1__CreateMaskResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'DeleteMask' implementation, should return SOAP_OK or error code
        virtual int DeleteMask(_ns1__DeleteMask *ns1__DeleteMask, ns1__SetConfigurationResponse &ns1__DeleteMaskResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'GetWebRTCConfigurations' implementation, should return SOAP_OK or error code
        virtual int GetWebRTCConfigurations(_ns1__GetWebRTCConfigurations *ns1__GetWebRTCConfigurations, _ns1__GetWebRTCConfigurationsResponse &ns1__GetWebRTCConfigurationsResponse) SOAP_PURE_VIRTUAL;
        //
        /// Web service operation 'SetWebRTCConfigurations' implementation, should return SOAP_OK or error code
        virtual int SetWebRTCConfigurations(_ns1__SetWebRTCConfigurations *ns1__SetWebRTCConfigurations, _ns1__SetWebRTCConfigurationsResponse &ns1__SetWebRTCConfigurationsResponse) SOAP_PURE_VIRTUAL;
    };
#endif
